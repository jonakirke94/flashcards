{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-navigator/src/utils.js","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-navigator/src/contexts.js","../../node_modules/svelte-navigator/src/paths.js","../../node_modules/svelte-navigator/src/warning.js","../../node_modules/svelte-navigator/src/routes.js","../../node_modules/svelte-navigator/src/history.js","../../node_modules/svelte-navigator/src/a11y.js","../../node_modules/svelte-navigator/src/Router.svelte","../../node_modules/svelte-navigator/src/hooks.js","../../node_modules/svelte-navigator/src/Route.svelte","../../node_modules/svelte-navigator/src/Link.svelte","../../src/DeckCard.svelte","../../src/ListEmpty.svelte","../../src/Loader.svelte","../../src/api/decks.js","../../src/stores/query.js","../../src/DeckCardList.svelte","../../src/icons/IconLightBulb.svelte","../../src/icons/IconEmojiSad.svelte","../../src/icons/IconEye.svelte","../../src/icons/IconArchive.svelte","../../src/icons/IconNext.svelte","../../src/base/BaseCard.svelte","../../src/base/BaseButtonRounded.svelte","../../src/misc/customTransitions.js","../../src/FlashCard.svelte","../../src/Error.svelte","../../src/notifications/context.js","../../src/flashcardEngine/moves.js","../../src/flashcardEngine/engine.js","../../src/FlashCardSession.svelte","../../src/InputSearch.svelte","../../src/icons/IconMoon.svelte","../../src/icons/IconMoonSolid.svelte","../../src/ButtonDarkMode.svelte","../../src/icons/IconFire.svelte","../../src/icons/IconX.svelte","../../src/notifications/Notification.svelte","../../src/notifications/store.js","../../src/notifications/NotificationList.svelte","../../src/misc/darkmode.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n\treturn (\n\t\t!event.defaultPrevented &&\n\t\tevent.button === 0 &&\n\t\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\t);\n}\n\nexport function createCounter() {\n\tlet i = 0;\n\t/**\n\t * Returns an id and increments the internal state\n\t * @returns {number}\n\t */\n\treturn () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n\treturn Math.random().toString(36).substring(2);\n}\n\nexport function findClosest(tagName, element) {\n\twhile (element && element.tagName !== tagName) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n\ttarget.addEventListener(type, handler);\n\treturn () => target.removeEventListener(type, handler);\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nconst createKey = ctxName => `@@svnav-ctx__${ctxName}`;\n\n// Use strings instead of objects, so different versions of\n// svelte-navigator can potentially still work together\nexport const LOCATION = createKey(\"LOCATION\");\nexport const ROUTER = createKey(\"ROUTER\");\nexport const ROUTE = createKey(\"ROUTE\");\nexport const ROUTE_PARAMS = createKey(\"ROUTE_PARAMS\");\nexport const FOCUS_ELEM = createKey(\"FOCUS_ELEM\");\n","export const paramRegex = /^:(.+)/;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n\tstring.substr(0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n\tconst segments = stripSlashes(uri).split(\"/\");\n\treturn filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n\tpathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n\tconst barePath =\n\t\tpath === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n\treturn `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n\tconst joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n\tconst joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n\treturn normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n\t[LINK_ID]: \"Link\",\n\t[ROUTE_ID]: \"Route\",\n\t[ROUTER_ID]: \"Router\",\n\t[USE_FOCUS_ID]: \"useFocus\",\n\t[USE_LOCATION_ID]: \"useLocation\",\n\t[USE_MATCH_ID]: \"useMatch\",\n\t[USE_NAVIGATE_ID]: \"useNavigate\",\n\t[USE_PARAMS_ID]: \"useParams\",\n\t[USE_RESOLVABLE_ID]: \"useResolvable\",\n\t[USE_RESOLVE_ID]: \"useResolve\",\n\t[NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n\tlet attr;\n\tif (labelId === ROUTE_ID) {\n\t\tattr = props.path ? `path=\"${props.path}\"` : \"default\";\n\t} else if (labelId === LINK_ID) {\n\t\tattr = `to=\"${props.to}\"`;\n\t} else if (labelId === ROUTER_ID) {\n\t\tattr = `basepath=\"${props.basepath || \"\"}\"`;\n\t}\n\treturn `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n\tconst origin = props && createIdentifier(originId || labelId, props);\n\tconst originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n\tconst label = createLabel(labelId);\n\tconst msg = isFunction(message) ? message(label) : message;\n\treturn `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler = handler => (...args) =>\n\thandler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n\tthrow new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n\tsegmentize,\n\tjoin,\n\taddQuery,\n\tstartsWith,\n\tparamRegex,\n\tisSplat,\n\tisRootSegment,\n\tisDynamic,\n\tstripSplat,\n\tnormalizePath,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n\tconst score = route.default\n\t\t? 0\n\t\t: segmentize(route.fullPath).reduce((acc, segment) => {\n\t\t\t\tlet nextScore = acc;\n\t\t\t\tnextScore += SEGMENT_POINTS;\n\n\t\t\t\tif (isRootSegment(segment)) {\n\t\t\t\t\tnextScore += ROOT_POINTS;\n\t\t\t\t} else if (isDynamic(segment)) {\n\t\t\t\t\tnextScore += DYNAMIC_POINTS;\n\t\t\t\t} else if (isSplat(segment)) {\n\t\t\t\t\tnextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n\t\t\t\t} else {\n\t\t\t\t\tnextScore += STATIC_POINTS;\n\t\t\t\t}\n\n\t\t\t\treturn nextScore;\n\t\t  }, 0);\n\n\treturn { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n\treturn (\n\t\troutes\n\t\t\t.map(rankRoute)\n\t\t\t// If two routes have the exact same score, we go by index instead\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.score < b.score) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.score > b.score) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn a.index - b.index;\n\t\t\t})\n\t);\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n\tlet bestMatch;\n\tlet defaultMatch;\n\n\tconst [uriPathname] = uri.split(\"?\");\n\tconst uriSegments = segmentize(uriPathname);\n\tconst isRootUri = uriSegments[0] === \"\";\n\tconst ranked = rankRoutes(routes);\n\n\tfor (let i = 0, l = ranked.length; i < l; i++) {\n\t\tconst { route } = ranked[i];\n\t\tlet missed = false;\n\t\tconst params = {};\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tconst createMatch = uri => ({ ...route, params, uri });\n\n\t\tif (route.default) {\n\t\t\tdefaultMatch = createMatch(uri);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst routeSegments = segmentize(route.fullPath);\n\t\tconst max = Math.max(uriSegments.length, routeSegments.length);\n\t\tlet index = 0;\n\n\t\tfor (; index < max; index++) {\n\t\t\tconst routeSegment = routeSegments[index];\n\t\t\tconst uriSegment = uriSegments[index];\n\n\t\t\tif (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n\t\t\t\t// Hit a splat, just grab the rest, and return a match\n\t\t\t\t// uri:   /files/documents/work\n\t\t\t\t// route: /files/* or /files/*splatname\n\t\t\t\tconst splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n\t\t\t\tparams[splatName] = uriSegments\n\t\t\t\t\t.slice(index)\n\t\t\t\t\t.map(decodeURIComponent)\n\t\t\t\t\t.join(\"/\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isUndefined(uriSegment)) {\n\t\t\t\t// URI is shorter than the route, no match\n\t\t\t\t// uri:   /users\n\t\t\t\t// route: /users/:userId\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst dynamicMatch = paramRegex.exec(routeSegment);\n\n\t\t\tif (dynamicMatch && !isRootUri) {\n\t\t\t\tconst value = decodeURIComponent(uriSegment);\n\t\t\t\tparams[dynamicMatch[1]] = value;\n\t\t\t} else if (routeSegment !== uriSegment) {\n\t\t\t\t// Current segments don't match, not dynamic, not splat, so no match\n\t\t\t\t// uri:   /users/123/settings\n\t\t\t\t// route: /users/:id/profile\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!missed) {\n\t\t\tbestMatch = createMatch(join(...uriSegments.slice(0, index)));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n\treturn pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n\t// /foo/bar, /baz/qux => /foo/bar\n\tif (startsWith(to, \"/\")) {\n\t\treturn to;\n\t}\n\n\tconst [toPathname, toQuery] = to.split(\"?\");\n\tconst [basePathname] = base.split(\"?\");\n\tconst toSegments = segmentize(toPathname);\n\tconst baseSegments = segmentize(basePathname);\n\n\t// ?a=b, /users?b=c => /users?a=b\n\tif (toSegments[0] === \"\") {\n\t\treturn addQuery(basePathname, toQuery);\n\t}\n\n\t// profile, /users/789 => /users/789/profile\n\tif (!startsWith(toSegments[0], \".\")) {\n\t\tconst pathname = baseSegments.concat(toSegments).join(\"/\");\n\t\treturn addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n\t}\n\n\t// ./       , /users/123 => /users/123\n\t// ../      , /users/123 => /users\n\t// ../..    , /users/123 => /\n\t// ../../one, /a/b/c/d   => /a/b/one\n\t// .././one , /a/b/c/d   => /a/b/c/one\n\tconst allSegments = baseSegments.concat(toSegments);\n\tconst segments = [];\n\n\tallSegments.forEach(segment => {\n\t\tif (segment === \"..\") {\n\t\t\tsegments.pop();\n\t\t} else if (segment !== \".\") {\n\t\t\tsegments.push(segment);\n\t\t}\n\t});\n\n\treturn addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n\tconst { pathname, hash = \"\", search = \"\", state } = location;\n\tconst baseSegments = segmentize(basepath, true);\n\tconst pathSegments = segmentize(pathname, true);\n\twhile (baseSegments.length) {\n\t\tif (baseSegments[0] !== pathSegments[0]) {\n\t\t\tfail(\n\t\t\t\tROUTER_ID,\n\t\t\t\t`Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n\t\t\t);\n\t\t}\n\t\tbaseSegments.shift();\n\t\tpathSegments.shift();\n\t}\n\treturn {\n\t\tpathname: join(...pathSegments),\n\t\thash,\n\t\tsearch,\n\t\tstate,\n\t};\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n *\n * @returns {{ pathname: string; search: string; hash: string }} The location\n */\nexport function createLocation(url) {\n\tconst searchIndex = url.indexOf(\"?\");\n\tconst hashIndex = url.indexOf(\"#\");\n\tconst hasSearchIndex = searchIndex !== -1;\n\tconst hasHashIndex = hashIndex !== -1;\n\tconst hash = hasHashIndex ? normalizeUrlFragment(url.substr(hashIndex)) : \"\";\n\tconst pathnameAndSearch = hasHashIndex ? url.substr(0, hashIndex) : url;\n\tconst search = hasSearchIndex\n\t\t? normalizeUrlFragment(pathnameAndSearch.substr(searchIndex))\n\t\t: \"\";\n\tconst pathname = hasSearchIndex\n\t\t? pathnameAndSearch.substr(0, searchIndex)\n\t\t: pathnameAndSearch;\n\treturn { pathname, search, hash };\n}\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n\treturn join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n\tconst fullPath = normalizePath(stripSplat(routePath));\n\tconst baseSegments = segmentize(fullPath, true);\n\tconst pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n\tconst routeMatch = match({ fullPath }, join(...pathSegments));\n\treturn routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { createLocation } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n\treturn {\n\t\t...source.location,\n\t\tpathname: encodeURI(decodeURI(source.location.pathname)),\n\t\tstate: source.history.state,\n\t\t_key: (source.history.state && source.history.state._key) || \"initial\",\n\t};\n}\n\nfunction createHistory(source) {\n\tlet listeners = [];\n\tlet location = getLocation(source);\n\tlet action = POP;\n\n\tconst notifyListeners = (listenerFns = listeners) =>\n\t\tlistenerFns.forEach(listener => listener({ location, action }));\n\n\treturn {\n\t\tget location() {\n\t\t\treturn location;\n\t\t},\n\t\tlisten(listener) {\n\t\t\tlisteners.push(listener);\n\n\t\t\tconst popstateListener = () => {\n\t\t\t\tlocation = getLocation(source);\n\t\t\t\taction = POP;\n\t\t\t\tnotifyListeners([listener]);\n\t\t\t};\n\n\t\t\t// Call listener when it is registered\n\t\t\tnotifyListeners([listener]);\n\n\t\t\tconst unlisten = addListener(source, \"popstate\", popstateListener);\n\t\t\treturn () => {\n\t\t\t\tunlisten();\n\t\t\t\tlisteners = listeners.filter(fn => fn !== listener);\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * Navigate to a new absolute route.\n\t\t *\n\t\t * @param {string|number} to The path to navigate to.\n\t\t *\n\t\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t\t * @param {Object} options\n\t\t * @param {*} [options.state] The state will be accessible through `location.state`\n\t\t * @param {boolean} [options.replace=false] Replace the current entry in the history\n\t\t * stack, instead of pushing on a new one\n\t\t */\n\t\tnavigate(to, options) {\n\t\t\tconst { state = {}, replace = false } = options || {};\n\t\t\taction = replace ? REPLACE : PUSH;\n\t\t\tif (isNumber(to)) {\n\t\t\t\tif (options) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\tNAVIGATE_ID,\n\t\t\t\t\t\t\"Navigation options (state or replace) are not supported, \" +\n\t\t\t\t\t\t\t\"when passing a number as the first argument to navigate. \" +\n\t\t\t\t\t\t\t\"They are ignored.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\taction = POP;\n\t\t\t\tsource.history.go(to);\n\t\t\t} else {\n\t\t\t\tconst keyedState = { ...state, _key: createGlobalId() };\n\t\t\t\t// try...catch iOS Safari limits to 100 pushState calls\n\t\t\t\ttry {\n\t\t\t\t\tsource.history[replace ? \"replaceState\" : \"pushState\"](\n\t\t\t\t\t\tkeyedState,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tto,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsource.location[replace ? \"replace\" : \"assign\"](to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocation = getLocation(source);\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n\nfunction createStackFrame(state, uri) {\n\treturn { ...createLocation(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n\tlet index = 0;\n\tlet stack = [createStackFrame(null, initialPathname)];\n\n\treturn {\n\t\t// This is just for testing...\n\t\tget entries() {\n\t\t\treturn stack;\n\t\t},\n\t\tget location() {\n\t\t\treturn stack[index];\n\t\t},\n\t\taddEventListener() {},\n\t\tremoveEventListener() {},\n\t\thistory: {\n\t\t\tget state() {\n\t\t\t\treturn stack[index].state;\n\t\t\t},\n\t\t\tpushState(state, title, uri) {\n\t\t\t\tindex++;\n\t\t\t\t// Throw away anything in the stack with an index greater than the current index.\n\t\t\t\t// This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n\t\t\t\t// If we call `go(+n)` the stack entries with an index greater than the current index can\n\t\t\t\t// be reused.\n\t\t\t\t// However, if we navigate to a path, instead of a number, we want to create a new branch\n\t\t\t\t// of navigation.\n\t\t\t\tstack = stack.slice(0, index);\n\t\t\t\tstack.push(createStackFrame(state, uri));\n\t\t\t},\n\t\t\treplaceState(state, title, uri) {\n\t\t\t\tstack[index] = createStackFrame(state, uri);\n\t\t\t},\n\t\t\tgo(to) {\n\t\t\t\tconst newIndex = index + to;\n\t\t\t\tif (newIndex < 0 || newIndex > stack.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex = newIndex;\n\t\t\t},\n\t\t},\n\t};\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n\t!isSSR &&\n\twindow.document &&\n\twindow.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n\tcanUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","import { get } from \"svelte/store\";\nimport { tick } from \"svelte\";\nimport { warn, ROUTER_ID, ROUTE_ID } from \"./warning\";\nimport { addListener } from \"./utils\";\n\n// We need to keep the focus candidate in a separate file, so svelte does\n// not update, when we mutate it.\n// Also, we need a single global reference, because taking focus needs to\n// work globally, even if we have multiple top level routers\n// eslint-disable-next-line import/no-mutable-exports\nexport let focusCandidate = null;\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let initialNavigation = true;\n\n/**\n * Check if RouterA is above RouterB in the document\n * @param {number} routerIdA The first Routers id\n * @param {number} routerIdB The second Routers id\n */\nfunction isAbove(routerIdA, routerIdB) {\n\tconst routerMarkers = document.querySelectorAll(\"[data-svnav-router]\");\n\tfor (let i = 0; i < routerMarkers.length; i++) {\n\t\tconst node = routerMarkers[i];\n\t\tconst currentId = Number(node.dataset.svnavRouter);\n\t\tif (currentId === routerIdA) return true;\n\t\tif (currentId === routerIdB) return false;\n\t}\n\treturn false;\n}\n\n/**\n * Check if a Route candidate is the best choice to move focus to,\n * and store the best match.\n * @param {{\n     level: number;\n     routerId: number;\n     route: {\n       id: number;\n       focusElement: import(\"svelte/store\").Readable<Promise<Element>|null>;\n     }\n   }} item A Route candidate, that updated and is visible after a navigation\n */\nexport function pushFocusCandidate(item) {\n\tif (\n\t\t// Best candidate if it's the only candidate...\n\t\t!focusCandidate ||\n\t\t// Route is nested deeper, than previous candidate\n\t\t// -> Route change was triggered in the deepest affected\n\t\t// Route, so that's were focus should move to\n\t\titem.level > focusCandidate.level ||\n\t\t// If the level is identical, we want to focus the first Route in the document,\n\t\t// so we pick the first Router lookin from page top to page bottom.\n\t\t(item.level === focusCandidate.level &&\n\t\t\tisAbove(item.routerId, focusCandidate.routerId))\n\t) {\n\t\tfocusCandidate = item;\n\t}\n}\n\n/**\n * Reset the focus candidate.\n */\nexport function clearFocusCandidate() {\n\tfocusCandidate = null;\n}\n\nexport function initialNavigationOccurred() {\n\tinitialNavigation = false;\n}\n\n/*\n * `focus` Adapted from https://github.com/oaf-project/oaf-side-effects/blob/master/src/index.ts\n *\n * https://github.com/oaf-project/oaf-side-effects/blob/master/LICENSE\n */\nexport function focus(elem) {\n\tif (!elem) return false;\n\tconst TABINDEX = \"tabindex\";\n\ttry {\n\t\tif (!elem.hasAttribute(TABINDEX)) {\n\t\t\telem.setAttribute(TABINDEX, \"-1\");\n\t\t\tlet unlisten;\n\t\t\t// We remove tabindex after blur to avoid weird browser behavior\n\t\t\t// where a mouse click can activate elements with tabindex=\"-1\".\n\t\t\tconst blurListener = () => {\n\t\t\t\telem.removeAttribute(TABINDEX);\n\t\t\t\tunlisten();\n\t\t\t};\n\t\t\tunlisten = addListener(elem, \"blur\", blurListener);\n\t\t}\n\t\telem.focus();\n\t\treturn document.activeElement === elem;\n\t} catch (e) {\n\t\t// Apparently trying to focus a disabled element in IE can throw.\n\t\t// See https://stackoverflow.com/a/1600194/2476884\n\t\treturn false;\n\t}\n}\n\nexport function isEndMarker(elem, id) {\n\treturn Number(elem.dataset.svnavRouteEnd) === id;\n}\n\nexport function isHeading(elem) {\n\treturn /^H[1-6]$/i.test(elem.tagName);\n}\n\nfunction query(selector, parent = document) {\n\treturn parent.querySelector(selector);\n}\n\nexport function queryHeading(id) {\n\tconst marker = query(`[data-svnav-route-start=\"${id}\"]`);\n\tlet current = marker.nextElementSibling;\n\twhile (!isEndMarker(current, id)) {\n\t\tif (isHeading(current)) {\n\t\t\treturn current;\n\t\t}\n\t\tconst heading = query(\"h1,h2,h3,h4,h5,h6\", current);\n\t\tif (heading) {\n\t\t\treturn heading;\n\t\t}\n\t\tcurrent = current.nextElementSibling;\n\t}\n\treturn null;\n}\n\nexport function handleFocus(route) {\n\tPromise.resolve(get(route.focusElement)).then(elem => {\n\t\tconst focusElement = elem || queryHeading(route.id);\n\t\tif (!focusElement) {\n\t\t\twarn(\n\t\t\t\tROUTER_ID,\n\t\t\t\t\"Could not find an element to focus. \" +\n\t\t\t\t\t\"You should always render a header for accessibility reasons, \" +\n\t\t\t\t\t'or set a custom focus element via the \"useFocus\" hook. ' +\n\t\t\t\t\t\"If you don't want this Route or Router to manage focus, \" +\n\t\t\t\t\t'pass \"primary={false}\" to it.',\n\t\t\t\troute,\n\t\t\t\tROUTE_ID,\n\t\t\t);\n\t\t}\n\t\tconst headingFocused = focus(focusElement);\n\t\tif (headingFocused) return;\n\t\tfocus(document.documentElement);\n\t});\n}\n\nexport const createTriggerFocus = (a11yConfig, announcementText, location) => (\n\tmanageFocus,\n\tannounceNavigation,\n) =>\n\t// Wait until the dom is updated, so we can look for headings\n\ttick().then(() => {\n\t\tif (!focusCandidate || initialNavigation) {\n\t\t\tinitialNavigationOccurred();\n\t\t\treturn;\n\t\t}\n\t\tif (manageFocus) {\n\t\t\thandleFocus(focusCandidate.route);\n\t\t}\n\t\tif (a11yConfig.announcements && announceNavigation) {\n\t\t\tconst { path, fullPath, meta, params, uri } = focusCandidate.route;\n\t\t\tconst announcementMessage = a11yConfig.createAnnouncement(\n\t\t\t\t{ path, fullPath, meta, params, uri },\n\t\t\t\tget(location),\n\t\t\t);\n\t\t\tPromise.resolve(announcementMessage).then(message => {\n\t\t\t\tannouncementText.set(message);\n\t\t\t});\n\t\t}\n\t\tclearFocusCandidate();\n\t});\n\nexport const visuallyHiddenStyle =\n\t\"position:fixed;\" +\n\t\"top:-1px;\" +\n\t\"left:0;\" +\n\t\"width:1px;\" +\n\t\"height:1px;\" +\n\t\"padding:0;\" +\n\t\"overflow:hidden;\" +\n\t\"clip:rect(0,0,0,0);\" +\n\t\"white-space:nowrap;\" +\n\t\"border:0;\";\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, setContext, onMount } from \"svelte\";\n\timport { writable } from \"svelte/store\";\n\timport { LOCATION, ROUTER } from \"./contexts\";\n\timport { globalHistory } from \"./history\";\n\timport { normalizePath } from \"./paths\";\n\timport { pick, match, normalizeLocation, createLocation } from \"./routes\";\n\timport { isSSR } from \"./utils\";\n\timport { warn, ROUTER_ID } from \"./warning\";\n\timport {\n\t\tpushFocusCandidate,\n\t\tvisuallyHiddenStyle,\n\t\tcreateTriggerFocus,\n\t} from \"./a11y\";\n\n\tconst defaultBasepath = \"/\";\n\n\texport let basepath = defaultBasepath;\n\texport let url = null;\n\texport let history = globalHistory;\n\texport let primary = true;\n\texport let a11y = {};\n\n\tconst a11yConfig = {\n\t\tcreateAnnouncement: route => `Navigated to ${route.uri}`,\n\t\tannouncements: true,\n\t\t...a11y,\n\t};\n\n\t// Remember the initial `basepath`, so we can fire a warning\n\t// when the user changes it later\n\tconst initialBasepath = basepath;\n\tconst normalizedBasepath = normalizePath(basepath);\n\n\tconst locationContext = getContext(LOCATION);\n\tconst routerContext = getContext(ROUTER);\n\n\tconst isTopLevelRouter = !locationContext;\n\tconst routerId = createId();\n\n\tconst manageFocus = primary && !(routerContext && !routerContext.manageFocus);\n\tconst announcementText = writable(\"\");\n\n\tconst routes = writable([]);\n\tconst activeRoute = writable(null);\n\t// Used in SSR to synchronously set that a Route is active.\n\tlet hasActiveRoute = false;\n\n\t// Nesting level of router.\n\t// We will need this to identify sibling routers, when moving\n\t// focus on navigation, so we can focus the first possible router\n\tconst level = isTopLevelRouter ? 0 : routerContext.level + 1;\n\n\t// If we're running an SSR we force the location to the `url` prop\n\tconst getInitialLocation = () =>\n\t\tnormalizeLocation(\n\t\t\tisSSR ? createLocation(url) : history.location,\n\t\t\tnormalizedBasepath,\n\t\t);\n\tconst location = isTopLevelRouter\n\t\t? writable(getInitialLocation())\n\t\t: locationContext;\n\tconst prevLocation = writable($location);\n\n\tconst triggerFocus = createTriggerFocus(\n\t\ta11yConfig,\n\t\tannouncementText,\n\t\tlocation,\n\t);\n\n\tconst createRouteFilter = routeId => routeList =>\n\t\trouteList.filter(routeItem => routeItem.id !== routeId);\n\n\tfunction registerRoute(route) {\n\t\tif (isSSR) {\n\t\t\t// In SSR we should set the activeRoute immediately if it is a match.\n\t\t\t// If there are more Routes being registered after a match is found,\n\t\t\t// we just skip them.\n\t\t\tif (hasActiveRoute) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingRoute = match(route, $location.pathname);\n\t\t\tif (matchingRoute) {\n\t\t\t\thasActiveRoute = true;\n\t\t\t\t// Return the match in SSR mode, so the matched Route can use it immediatly.\n\t\t\t\t// Waiting for activeRoute to update does not work, because it updates\n\t\t\t\t// after the Route is initialized\n\t\t\t\treturn matchingRoute; // eslint-disable-line consistent-return\n\t\t\t}\n\t\t} else {\n\t\t\troutes.update(prevRoutes => {\n\t\t\t\t// Remove an old version of the updated route,\n\t\t\t\t// before pushing the new version\n\t\t\t\tconst nextRoutes = createRouteFilter(route.id)(prevRoutes);\n\t\t\t\tnextRoutes.push(route);\n\t\t\t\treturn nextRoutes;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction unregisterRoute(routeId) {\n\t\troutes.update(createRouteFilter(routeId));\n\t}\n\n\tif (!isTopLevelRouter && basepath !== defaultBasepath) {\n\t\twarn(\n\t\t\tROUTER_ID,\n\t\t\t'Only top-level Routers can have a \"basepath\" prop. It is ignored.',\n\t\t\t{ basepath },\n\t\t);\n\t}\n\t$: if (basepath !== initialBasepath) {\n\t\twarn(ROUTER_ID, 'You cannot change the \"basepath\" prop. It is ignored.');\n\t}\n\n\t// This reactive statement will be run when the Router is created\n\t// when there are no Routes and then again the following tick, so it\n\t// will not find an active Route in SSR and in the browser it will only\n\t// pick an active Route after all Routes have been registered.\n\t$: {\n\t\tconst bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch);\n\t}\n\n\t// Manage focus and announce navigation to screen reader users\n\t$: {\n\t\tif (isTopLevelRouter) {\n\t\t\tconst hasHash = !!$location.hash;\n\t\t\t// When a hash is present in the url, we skip focus management, because\n\t\t\t// focusing a different element will prevent in-page jumps (See #3)\n\t\t\tconst shouldManageFocus = !hasHash && manageFocus;\n\t\t\t// We don't want to make an announcement, when the hash changes,\n\t\t\t// but the active route stays the same\n\t\t\tconst announceNavigation =\n\t\t\t\t!hasHash || $location.pathname !== $prevLocation.pathname;\n\t\t\ttriggerFocus(shouldManageFocus, announceNavigation);\n\t\t}\n\t}\n\n\t// Queue matched Route, so top level Router can decide which Route to focus.\n\t// Non primary Routers should just be ignored\n\t$: if (manageFocus && $activeRoute && $activeRoute.primary) {\n\t\tpushFocusCandidate({ level, routerId, route: $activeRoute });\n\t}\n\n\tif (isTopLevelRouter) {\n\t\t// The topmost Router in the tree is responsible for updating\n\t\t// the location store and supplying it through context.\n\t\tonMount(() => {\n\t\t\tconst unlisten = history.listen(changedHistory => {\n\t\t\t\tconst normalizedLocation = normalizeLocation(\n\t\t\t\t\tchangedHistory.location,\n\t\t\t\t\tnormalizedBasepath,\n\t\t\t\t);\n\t\t\t\tprevLocation.set($location);\n\t\t\t\tlocation.set(normalizedLocation);\n\t\t\t});\n\n\t\t\treturn unlisten;\n\t\t});\n\n\t\tsetContext(LOCATION, location);\n\t}\n\n\tsetContext(ROUTER, {\n\t\tactiveRoute,\n\t\tregisterRoute,\n\t\tunregisterRoute,\n\t\tmanageFocus,\n\t\tlevel,\n\t\tid: routerId,\n\t\thistory: isTopLevelRouter ? history : routerContext.history,\n\t\tbasepath: isTopLevelRouter ? normalizedBasepath : routerContext.basepath,\n\t});\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-router={routerId} />\n\n<slot />\n\n{#if isTopLevelRouter && manageFocus && a11yConfig.announcements}\n\t<div\n\t\trole=\"status\"\n\t\taria-atomic=\"true\"\n\t\taria-live=\"polite\"\n\t\tstyle={visuallyHiddenStyle}\n\t>\n\t\t{$announcementText}\n\t</div>\n{/if}\n","import { getContext, onDestroy, tick } from \"svelte\";\nimport { derived, get, writable } from \"svelte/store\";\nimport { LOCATION, ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\nimport { resolveLink, match, normalizeLocation } from \"./routes\";\nimport { isNumber } from \"./utils\";\nimport {\n\tfail,\n\tcreateLabel,\n\tUSE_FOCUS_ID,\n\tROUTER_ID,\n\tUSE_LOCATION_ID,\n\tROUTE_ID,\n\tUSE_RESOLVE_ID,\n\tUSE_RESOLVABLE_ID,\n\tUSE_NAVIGATE_ID,\n\tUSE_MATCH_ID,\n\tUSE_PARAMS_ID,\n} from \"./warning\";\n\n/**\n * Check if a component or hook have been created outside of a\n * context providing component\n * @param {number} componentId\n * @param {*} props\n * @param {string?} ctxKey\n * @param {number?} ctxProviderId\n */\nexport function usePreflightCheck(\n\tcomponentId,\n\tprops,\n\tctxKey = ROUTER,\n\tctxProviderId = ROUTER_ID,\n) {\n\tconst ctx = getContext(ctxKey);\n\tif (!ctx) {\n\t\tfail(\n\t\t\tcomponentId,\n\t\t\tlabel =>\n\t\t\t\t`You cannot use ${label} outside of a ${createLabel(ctxProviderId)}.`,\n\t\t\tprops,\n\t\t);\n\t}\n}\n\nconst toReadonly = ctx => {\n\tconst { subscribe } = getContext(ctx);\n\treturn { subscribe };\n};\n\n/**\n * Access the current location via a readable store.\n * @returns {import(\"svelte/store\").Readable<{\n    pathname: string;\n    search: string;\n    hash: string;\n    state: {};\n  }>}\n *\n * @example\n  ```html\n  <script>\n    import { useLocation } from \"svelte-navigator\";\n\n    const location = useLocation();\n\n    $: console.log($location);\n    // {\n    //   pathname: \"/blog\",\n    //   search: \"?id=123\",\n    //   hash: \"#comments\",\n    //   state: {}\n    // }\n  </script>\n  ```\n */\nexport function useLocation() {\n\tusePreflightCheck(USE_LOCATION_ID);\n\treturn toReadonly(LOCATION);\n}\n\n/**\n * @typedef {{\n    path: string;\n    fullPath: string;\n    uri: string;\n    params: {};\n  }} RouteMatch\n */\n\n/**\n * @typedef {import(\"svelte/store\").Readable<RouteMatch|null>} RouteMatchStore\n */\n\n/**\n * Access the history of top level Router.\n */\nexport function useHistory() {\n\tconst { history } = getContext(ROUTER);\n\treturn history;\n}\n\n/**\n * Access the base of the parent Route.\n */\nexport function useRouteBase() {\n\tconst route = getContext(ROUTE);\n\treturn route ? derived(route, _route => _route.base) : writable(\"/\");\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {(path: string) => string}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolve } from \"svelte-navigator\";\n\n    const resolve = useResolve();\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`\n    const resolvedLink = resolve(\"relativePath\");\n  </script>\n\n  <a href={resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolve() {\n\tusePreflightCheck(USE_RESOLVE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\t/**\n\t * Resolves the path relative to the current route and basepath.\n\t *\n\t * @param {string} path The path to resolve\n\t * @returns {string} The resolved path\n\t */\n\tconst resolve = path => resolveLink(path, get(routeBase), appBase);\n\treturn resolve;\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {import(\"svelte/store\").Readable<string>}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolvable } from \"svelte-navigator\";\n\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`.\n    const resolvedLink = useResolvable(\"relativePath\");\n  </script>\n\n  <a href={$resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolvable(path) {\n\tusePreflightCheck(USE_RESOLVABLE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\treturn derived(routeBase, _routeBase =>\n\t\tresolveLink(path, _routeBase, appBase),\n\t);\n}\n\n/**\n * A hook, that returns a context-aware version of `navigate`.\n * It will automatically resolve the given link relative to the current Route.\n * It will also resolve a link against the `basepath` of the Router.\n *\n * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router>\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /absolutePath\n  </button>\n  ```\n  *\n  * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router basepath=\"/base\">\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /base/route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /base/absolutePath\n  </button>\n  ```\n */\nexport function useNavigate() {\n\tusePreflightCheck(USE_NAVIGATE_ID);\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\t/**\n\t * Navigate to a new route.\n\t * Resolves the link relative to the current route and basepath.\n\t *\n\t * @param {string|number} to The path to navigate to.\n\t *\n\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t * @param {Object} options\n\t * @param {*} [options.state]\n\t * @param {boolean} [options.replace=false]\n\t */\n\tconst navigateRelative = (to, options) => {\n\t\t// If to is a number, we navigate to the target stack entry via `history.go`.\n\t\t// Otherwise resolve the link\n\t\tconst target = isNumber(to) ? to : resolve(to);\n\t\treturn navigate(target, options);\n\t};\n\treturn navigateRelative;\n}\n\n/**\n * Use Svelte Navigators matching without needing to use a Route.\n * Returns a readable store with the potential match,\n * that changes, when the location changes.\n *\n * The provided path will be resolved relatively,\n * as you're used to with all paths in Svelte Navigator\n *\n * @param {string} path The path, to match against.\n * It works just like a Route path\n * @returns {RouteMatchStore} The matched route.\n * Returns `null`, when nothing could be matched\n *\n * @example\n  ```html\n  <script>\n    import { useMatch } from \"svelte-navigator\";\n\n    const relativeMatch = useMatch(\"relative/path/:to/*somewhere\");\n    const absoluteMatch = useMatch(\"/absolute/path/:to/*somewhere\");\n\n    $: console.log($relativeMatch.params.to);\n    $: console.log($absoluteMatch.params.somewhere);\n  </script>\n  ```\n */\nexport function useMatch(path) {\n\tusePreflightCheck(USE_MATCH_ID);\n\tconst location = useLocation();\n\tconst resolve = useResolve();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\tconst resolvedPath = resolve(path);\n\tconst { pathname: fullPath } = normalizeLocation(\n\t\t{ pathname: resolvedPath },\n\t\tappBase,\n\t);\n\treturn derived(location, loc => match({ fullPath, path }, loc.pathname));\n}\n\n/**\n * Access the parent Routes matched params and wildcards\n * @returns {import(\"svelte/store\").Readable<{\n     [param: string]: any;\n   }>} A readable store containing the matched parameters and wildcards\n *\n * @example\n  ```html\n  <!--\n    Somewhere inside <Route path=\"user/:id/*splat\" />\n    with a current url of \"/myApp/user/123/pauls-profile\"\n  -->\n  <script>\n    import { useParams } from \"svelte-navigator\";\n\n    const params = useParams();\n\n    $: console.log($params); // -> { id: \"123\", splat: \"pauls-profile\" }\n  </script>\n\n  <h3>Welcome user {$params.id}! bleep bloop...</h3>\n  ```\n */\nexport function useParams() {\n\tusePreflightCheck(USE_PARAMS_ID, null, ROUTE, ROUTE_ID);\n\treturn toReadonly(ROUTE_PARAMS);\n}\n\n/**\n * Provide a custom element to focus, when the parent route is visited.\n * It returns the `registerFocus` function you can call manually with an\n * Element or use as a Svelte action via the `use` directive.\n *\n * @example\n  ```html\n  <!-- Using `registerFocus` as a Svelte action: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p use:registerFocus>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Calling `registerFocus` manually: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    let focusElement;\n\n    onMount(() => registerFocus(focusElement))\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p bind:this={focusElement}>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Using `registerFocus` asyncronously: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    const lazyImport = import(\"./MyComponent.svelte\").then(module => module.default);\n  </script>\n\n  {#await lazyImport then MyComponent}\n    <MyComponent {registerFocus} />\n  {/await}\n\n  <!-- MyComponent.svelte -->\n  <script>\n    export let registerFocus;\n  </script>\n\n  <h1 use:registerFocus>Hi there!</h1>\n  ```\n */\nexport function useFocus() {\n\tusePreflightCheck(USE_FOCUS_ID, null, ROUTE, ROUTE_ID);\n\tconst location = useLocation();\n\tconst focusElement = getContext(FOCUS_ELEM);\n\n\tlet resolve;\n\tconst unsubscribe = location.subscribe(() => {\n\t\tconst lazyElement = new Promise(_resolve => {\n\t\t\tresolve = _resolve;\n\t\t});\n\t\tfocusElement.set(lazyElement);\n\t});\n\n\tonDestroy(unsubscribe);\n\n\treturn node => {\n\t\tlet unmounted = false;\n\t\tconst innerUnsubscribe = location.subscribe(() => {\n\t\t\ttick().then(() => {\n\t\t\t\tif (!unmounted) {\n\t\t\t\t\tresolve(node);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tunmounted = true;\n\t\t\t\tinnerUnsubscribe();\n\t\t\t},\n\t\t};\n\t};\n}\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, onDestroy, setContext } from \"svelte\";\n\timport { writable, get } from \"svelte/store\";\n\timport Router from \"./Router.svelte\";\n\timport { ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\n\timport {\n\t\tuseLocation,\n\t\tuseNavigate,\n\t\tuseRouteBase,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { isSSR } from \"./utils\";\n\timport { extractBaseUri } from \"./routes\";\n\timport { join } from \"./paths\";\n\timport { ROUTE_ID } from \"./warning\";\n\n\texport let path = \"\";\n\texport let component = null;\n\texport let meta = {};\n\texport let primary = true;\n\n\tusePreflightCheck(ROUTE_ID, $$props);\n\n\tconst id = createId();\n\n\tconst { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\tconst parentBase = useRouteBase();\n\tconst location = useLocation();\n\tconst focusElement = writable(null);\n\n\t// In SSR we cannot wait for $activeRoute to update,\n\t// so we use the match returned from `registerRoute` instead\n\tlet ssrMatch;\n\n\tconst route = writable();\n\t$: {\n\t\t// The route store will be re-computed whenever props, location or parentBase change\n\t\tconst isDefault = path === \"\";\n\t\tconst rawBase = join($parentBase, path);\n\t\tconst updatedRoute = {\n\t\t\tid,\n\t\t\tpath,\n\t\t\tmeta,\n\t\t\t// If no path prop is given, this Route will act as the default Route\n\t\t\t// that is rendered if no other Route in the Router is a match\n\t\t\tdefault: isDefault,\n\t\t\tfullPath: isDefault ? \"\" : rawBase,\n\t\t\tbase: isDefault\n\t\t\t\t? $parentBase\n\t\t\t\t: extractBaseUri(rawBase, $location.pathname),\n\t\t\tprimary,\n\t\t\tfocusElement,\n\t\t};\n\t\troute.set(updatedRoute);\n\t\t// If we're in SSR mode and the Route matches,\n\t\t// `registerRoute` will return the match\n\t\tssrMatch = registerRoute(updatedRoute);\n\t}\n\n\t$: isActive = !!(ssrMatch || ($activeRoute && $activeRoute.id === id));\n\n\tconst params = writable({});\n\t$: if (isActive) {\n\t\tconst { params: activeParams } = ssrMatch || $activeRoute;\n\t\tparams.set(activeParams);\n\t}\n\n\tsetContext(ROUTE, route);\n\tsetContext(ROUTE_PARAMS, params);\n\tsetContext(FOCUS_ELEM, focusElement);\n\n\t// We need to call useNavigate after the route is set,\n\t// so we can use the routes path for link resolution\n\tconst navigate = useNavigate();\n\n\t// There is no need to unregister Routes in SSR since it will all be\n\t// thrown away anyway\n\tif (!isSSR) {\n\t\tonDestroy(() => unregisterRoute(id));\n\t}\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-start={id} />\n{#if isActive}\n\t<Router {primary}>\n\t\t<!--\n      `$params` always returns `{}` in SSR in Route, because it will\n      update after component initialisation has already happend.\n      `get(params)` always works, but is not reactive, so we can't\n      use it in client rendered mode\n    -->\n\t\t{#if component !== null}\n\t\t\t<svelte:component\n\t\t\t\tthis={component}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t\t{...isSSR ? get(params) : $params}\n\t\t\t\t{...$$restProps}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<slot\n\t\t\t\tparams={isSSR ? get(params) : $params}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t/>\n\t\t{/if}\n\t</Router>\n{/if}\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-end={id} />\n","<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { createEventDispatcher } from \"svelte\";\n\timport {\n\t\tuseLocation,\n\t\tuseResolve,\n\t\tuseHistory,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { shouldNavigate, isFunction } from \"./utils\";\n\timport { startsWith } from \"./paths\";\n\timport { LINK_ID } from \"./warning\";\n\n\texport let to;\n\texport let replace = false;\n\texport let state = {};\n\texport let getProps = null;\n\n\tusePreflightCheck(LINK_ID, $$props);\n\n\tconst location = useLocation();\n\tconst dispatch = createEventDispatcher();\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\n\t// We need to pass location here to force re-resolution of the link,\n\t// when the pathname changes. Otherwise we could end up with stale path params,\n\t// when for example an :id changes in the parent Routes path\n\t$: href = resolve(to, $location);\n\t$: isPartiallyCurrent = startsWith($location.pathname, href);\n\t$: isCurrent = href === $location.pathname;\n\t$: ariaCurrent = isCurrent ? { \"aria-current\": \"page\" } : {};\n\t$: props = (() => {\n\t\tif (isFunction(getProps)) {\n\t\t\tconst dynamicProps = getProps({\n\t\t\t\tlocation: $location,\n\t\t\t\thref,\n\t\t\t\tisPartiallyCurrent,\n\t\t\t\tisCurrent,\n\t\t\t});\n\t\t\treturn { ...$$restProps, ...dynamicProps };\n\t\t}\n\t\treturn $$restProps;\n\t})();\n\n\tfunction onClick(event) {\n\t\tdispatch(\"click\", event);\n\n\t\tif (shouldNavigate(event)) {\n\t\t\tevent.preventDefault();\n\t\t\t// Don't push another entry to the history stack when the user\n\t\t\t// clicks on a Link to the page they are currently on.\n\t\t\tconst shouldReplace = isCurrent || replace;\n\t\t\tnavigate(href, { state, replace: shouldReplace });\n\t\t}\n\t}\n</script>\n\n<a {href} {...ariaCurrent} on:click={onClick} {...props}>\n\t<slot />\n</a>\n","<script>\r\n  import { Link } from \"svelte-navigator\";\r\n\r\n  export let deck;\r\n\r\n  $: themeClasses = {\r\n    red: \"bg-red-50 border-red-200 focus-within:ring-red-500 hover:border-red-400\",\r\n    green:\r\n      \"bg-green-50 border-green-200 focus-within:ring-green-500 hover:border-green-400\",\r\n    purple:\r\n      \"bg-purple-50 border-purple-200 focus-within:ring-purple-500 hover:border-purple-400\",\r\n  }[deck.theme];\r\n</script>\r\n\r\n<li\r\n  class=\"{themeClasses} relative border rounded-md dark:bg-gray-700 dark:focus-within:ring-gray-800 dark:hover:border-gray-800 dark:border-gray-500 px-6 py-5 shadow-sm flex items-center space-x-3 focus-within:ring-2 focus-within:ring-offset-2\"\r\n>\r\n  <div class=\"flex-shrink-0\">\r\n    <img class=\"h-10 w-10 rounded-full\" src={deck.icon} alt=\"Deck Icon\" />\r\n  </div>\r\n  <div class=\"flex-1 min-w-0\">\r\n    <Link to=\"/{deck.slug}\" class=\"focus:outline-none\">\r\n      <span class=\"absolute inset-0\" aria-hidden=\"true\" />\r\n      <p class=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n        {deck.name}\r\n      </p>\r\n      <p class=\"text-sm text-gray-500 dark:text-gray-200 truncate\">\r\n        {deck.description}\r\n      </p>\r\n    </Link>\r\n  </div>\r\n</li>\r\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  export let title;\r\n  export let description;\r\n  export let buttonText = \"Clear query\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<div\r\n  class=\"text-center mt-12 border py-8 rounded-md bg-yellow-50 border-yellow-200 dark:bg-gray-600 dark:border-gray-200\"\r\n>\r\n  <h3 class=\"mt-2 text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n    {title}\r\n  </h3>\r\n  <p class=\"mt-1 text-sm text-gray-500 dark:text-gray-200\">{description}</p>\r\n  <div class=\"mt-6\">\r\n    <button\r\n      on:click={() => dispatch(\"clear\")}\r\n      type=\"button\"\r\n      class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white dark:bg-black bg-yellow-600 hover:bg-yellow-700 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 dark:focus:ring-gray-500\"\r\n    >\r\n      {buttonText}\r\n    </button>\r\n  </div>\r\n</div>\r\n","Loading...\r\n","const DeckApi = {\r\n  base: location.origin.includes(\"localhost\")\r\n    ? location.origin\r\n    : `${location.origin}/flashcards`,\r\n\r\n  getDecks() {\r\n    console.log(\"process env\", process.env);\r\n\r\n    return fetch(`${this.base}/data/decks/index.json`).then((response) =>\r\n      response.json()\r\n    );\r\n  },\r\n\r\n  getBySlug(slug) {\r\n    const path = `${this.base}/data/decks/${slug}.json`;\r\n    return fetch(path).then((response) => response.json());\r\n  },\r\n};\r\n\r\nexport default DeckApi;\r\n","import { writable } from \"svelte/store\";\r\n\r\nexport const query = writable(\"\");\r\n","<script>\r\n  import DeckCard from \"./DeckCard.svelte\";\r\n  import ListEmpty from \"./ListEmpty.svelte\";\r\n  import Loader from \"./Loader.svelte\";\r\n  import deckApi from \"./api/decks\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  import { query } from \"./stores/query\";\r\n\r\n  let isLoading = true;\r\n\r\n  let decks = [];\r\n\r\n  onMount(async () => {\r\n    decks = await deckApi.getDecks();\r\n    isLoading = false;\r\n  });\r\n\r\n  $: filteredDecks = decks.filter((deck) => {\r\n    return deck.slug.toLowerCase().includes($query.toLowerCase());\r\n  });\r\n\r\n  function clearQuery() {\r\n    $query = \"\";\r\n  }\r\n</script>\r\n\r\n{#if isLoading}\r\n  <Loader />\r\n{:else if !filteredDecks.length}\r\n  <ListEmpty\r\n    title=\"No decks found\"\r\n    description=\"No deck matched your query\"\r\n    on:clear={clearQuery}\r\n  />\r\n{:else}\r\n  <ul class=\"space-y-4\">\r\n    {#each filteredDecks as deck (deck.slug)}\r\n      <DeckCard {deck} />\r\n    {/each}\r\n  </ul>\r\n{/if}\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: light-bulb -->\r\n\r\n<svg\r\n  class={classNames}\r\n  fill=\"currentColor\"\r\n  viewBox=\"0 0 20 20\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path\r\n    d=\"M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z\"\r\n  /></svg\r\n>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: emoji-sad -->\r\n\r\n<svg\r\n  class={classNames}\r\n  fill=\"none\"\r\n  stroke=\"currentColor\"\r\n  viewBox=\"0 0 24 24\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path\r\n    stroke-linecap=\"round\"\r\n    stroke-linejoin=\"round\"\r\n    stroke-width=\"2\"\r\n    d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n  /></svg\r\n>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: eye -->\r\n\r\n<svg\r\n  class={classNames}\r\n  fill=\"currentColor\"\r\n  viewBox=\"0 0 20 20\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" /><path\r\n    fill-rule=\"evenodd\"\r\n    d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\r\n    clip-rule=\"evenodd\"\r\n  /></svg\r\n>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: archive -->\r\n<svg\r\n  class={classNames}\r\n  fill=\"currentColor\"\r\n  viewBox=\"0 0 20 20\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" /><path\r\n    fill-rule=\"evenodd\"\r\n    d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\r\n    clip-rule=\"evenodd\"\r\n  /></svg\r\n>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: arrow-narrow-right -->\r\n<svg\r\n  class={classNames}\r\n  fill=\"none\"\r\n  stroke=\"currentColor\"\r\n  viewBox=\"0 0 24 24\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path\r\n    stroke-linecap=\"round\"\r\n    stroke-linejoin=\"round\"\r\n    stroke-width=\"2\"\r\n    d=\"M17 8l4 4m0 0l-4 4m4-4H3\"\r\n  /></svg\r\n>\r\n","<script>\r\n  export let title = \"\";\r\n\r\n  export let color = \"red\";\r\n\r\n  $: theme = {\r\n    backgroundImage: `bg-striped-${color}`,\r\n  };\r\n</script>\r\n\r\n<div class=\"relative w-full\">\r\n  <div class=\"flex flex-col items-center z-10\">\r\n    <!-- Header -->\r\n    <div class=\"py-4 px-4  \">\r\n      <slot name=\"header\">\r\n        <h1 class=\"text-white font-semibold text-3xl\">{title}</h1>\r\n      </slot>\r\n    </div>\r\n\r\n    <!-- Body -->\r\n    <div\r\n      class=\"py-4 px-4 relative flex-1 flex items-center w-full text-xl text-center\"\r\n    >\r\n      <slot />\r\n    </div>\r\n\r\n    <!-- Footer -->\r\n    <div class=\"py-4 px-8 flex space-x-8 \">\r\n      <slot name=\"footer\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"{theme.backgroundImage} absolute h-full w-full inset-0\" />\r\n</div>\r\n\r\n<style>\r\n  .bg-striped-red,\r\n  .bg-striped-red::before {\r\n    @apply rounded-md;\r\n    background: linear-gradient(\r\n        117.88deg,\r\n        rgba(254, 226, 226, 0.2) 2.87%,\r\n        /* bg-red-100 */ rgba(239, 68, 68, 0.5) 99.42% /* bg-red-700 */\r\n      ),\r\n      url(\"/images/striped-pattern.svg\") top center repeat-x, rgb(185, 28, 28); /* bg-red-700 */\r\n    background-size: cover;\r\n    z-index: -1;\r\n  }\r\n\r\n  .bg-striped-green,\r\n  .my-bg-striped-green::before {\r\n    @apply rounded-md;\r\n    background: linear-gradient(\r\n        117.88deg,\r\n        rgba(209, 250, 229, 0.2) 2.87%,\r\n        /* bg-green-100 */ rgba(4, 120, 87, 0.5) 99.42% /* bg-green-700 */\r\n      ),\r\n      url(\"/images/striped-pattern.svg\") top center repeat-x, rgb(16, 185, 129); /* bg-green-700 */\r\n    background-size: cover;\r\n    z-index: -1;\r\n  }\r\n\r\n  .bg-striped-purple,\r\n  .bg-striped-purple::before {\r\n    @apply rounded-md;\r\n    background: linear-gradient(\r\n        117.88deg,\r\n        rgba(237, 233, 254, 0.2) 2.87%,\r\n        /* bg-purple-100 */ rgba(139, 92, 246, 0.5) 99.42% /* bg-purple-700 */\r\n      ),\r\n      url(\"/images/striped-pattern.svg\") top center repeat-x, rgb(109, 40, 217); /* bg-purple-700 */\r\n    background-size: cover;\r\n    z-index: -1;\r\n  }\r\n</style>\r\n","<script>\r\n  export let tooltip = \"\";\r\n\r\n  export let size = \"l\"; // [\"s\", \"m\", \"l\"]\r\n  export let theme = \"white\";\r\n\r\n  export let registerFocus = () => {};\r\n\r\n  $: sizeClasses = {\r\n    l: \"h-16 w-16\",\r\n    m: \"h-12 w-12\",\r\n    s: \"h-8 w-8\",\r\n  }[size];\r\n\r\n  $: themeClasses = {\r\n    white: \"bg-white focus-within:ring-indigo-500\",\r\n    yellow: \"bg-yellow-50 focus-within:ring-yellow-500\",\r\n    purple: \"bg-purple-50 focus-within:ring-purple-500\",\r\n  }[theme];\r\n</script>\r\n\r\n<div class=\"flex flex-col items-center\">\r\n  <button\r\n    use:registerFocus\r\n    title={tooltip}\r\n    class=\"{themeClasses} {sizeClasses} dark:bg-gray-700 dark:text-white dark:focus-within:ring-black rounded-md border-none flex items-center justify-center flex-shrink-0 focus-within:ring-2 focus-within:ring-offset-2\"\r\n    on:click\r\n  >\r\n    <slot name=\"icon\" />\r\n  </button>\r\n  <slot />\r\n</div>\r\n","export const flipVertically = (node, { delay = 0, duration = 500 }) => {\r\n  return {\r\n    delay,\r\n    duration,\r\n    css: (t, u) => `\r\n      transform: rotateY(${1 - u * 180}deg);\r\n      opacity: ${1 - u};\r\n    `,\r\n  };\r\n};\r\n\r\nexport const flipHorizontally = (node, { delay = 0, duration = 500 }) => {\r\n  return {\r\n    delay,\r\n    duration,\r\n    css: (t, u) => `\r\n      transform: rotateX(${1 - u * 180}deg);\r\n      opacity: ${1 - u};\r\n    `,\r\n  };\r\n};\r\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import IconLightBulb from \"./icons/IconLightBulb.svelte\";\r\n  import IconEmojiSad from \"./icons/IconEmojiSad.svelte\";\r\n  import IconEye from \"./icons/IconEye.svelte\";\r\n  import IconArchive from \"./icons/IconArchive.svelte\";\r\n  import IconNext from \"./icons/IconNext.svelte\";\r\n  import BaseCard from \"./base/BaseCard.svelte\";\r\n  import BaseButtonRounded from \"./base/BaseButtonRounded.svelte\";\r\n\r\n  import { flipHorizontally, flipVertically } from \"./misc/customTransitions\";\r\n\r\n  let showFront = true;\r\n\r\n  let isFlipping = false;\r\n\r\n  function handleFlip() {\r\n    isFlipping = true;\r\n    showFront = !showFront;\r\n  }\r\n\r\n  // Flip the card back when the card value is changed\r\n  $: card, ((showFront = true), (isFlipping = false));\r\n\r\n  $: flipTransition = isFlipping ? flipHorizontally : flipVertically;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let card;\r\n  export let color;\r\n  export let name;\r\n\r\n  export let registerFocus;\r\n\r\n  console.log(card, \"card\");\r\n</script>\r\n\r\n<BaseCard {color}>\r\n  <!-- Body -->\r\n\r\n  <div slot=\"header\">\r\n    <h1 class=\"text-white font-semibold text-3xl\">{name} flashcards</h1>\r\n\r\n    <span\r\n      class=\"flex text-sm text-white font-semibold absolute right-2 top-2\"\r\n      title=\"Seen this card\"\r\n    >\r\n      <IconEye class=\"text-gray-100 w-5 h-5 mr-1\" />\r\n      <span class=\"w-3 text-right\">{card.seen}</span>\r\n    </span>\r\n    <span\r\n      class=\"flex text-sm text-white font-semibold absolute right-2 top-8\"\r\n      title=\"Bucket\"\r\n    >\r\n      <IconArchive class=\"text-gray-100 w-5 h-5 mr-1\" />\r\n      <!-- Bucket levels are zero-indexed so add 1 to make it user friendly -->\r\n      <span class=\"w-3 text-right\">{card.level + 1}</span>\r\n    </span>\r\n  </div>\r\n\r\n  <!-- key'ing an element makes its content rerender if the key changes-->\r\n  <!-- we need this to ensure the flip animation in \"I know this -> I know this\" sequences -->\r\n  {#key card.id}\r\n    <div class=\"h-64\">\r\n      <div class=\"flippable\">\r\n        {#if showFront}\r\n          <div transition:flipTransition|local class=\"side text-white text-2xl\">\r\n            Q: {card.question}\r\n          </div>\r\n        {:else}\r\n          <div\r\n            transition:flipTransition|local\r\n            class=\"side text-white text-2xl back\"\r\n          >\r\n            A: {card.answer}\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  {/key}\r\n\r\n  <!-- Footer -->\r\n  <div class=\"flex space-x-8\" slot=\"footer\">\r\n    {#if showFront}\r\n      <BaseButtonRounded tooltip=\"Show me the answer\" on:click={handleFlip}>\r\n        <IconEmojiSad\r\n          class=\"text-indigo-600 dark:text-white h-6 w-6\"\r\n          slot=\"icon\"\r\n        />\r\n        <span class=\"action-text\">Turn</span>\r\n      </BaseButtonRounded>\r\n\r\n      <BaseButtonRounded\r\n        {registerFocus}\r\n        tooltip=\"Show me the next question\"\r\n        on:click={() => dispatch(\"success\")}\r\n      >\r\n        <IconLightBulb\r\n          class=\"text-indigo-600 dark:text-white h-6 w-6\"\r\n          slot=\"icon\"\r\n        />\r\n        <span class=\"action-text\">I know this</span>\r\n      </BaseButtonRounded>\r\n    {:else}\r\n      <BaseButtonRounded\r\n        tooltip=\"Next card\"\r\n        on:click={() => dispatch(\"failure\")}\r\n      >\r\n        <IconNext class=\"text-indigo-600 dark:text-white h-6 w-6\" slot=\"icon\" />\r\n        <span class=\"action-text\">Next card</span>\r\n      </BaseButtonRounded>\r\n    {/if}\r\n  </div>\r\n</BaseCard>\r\n\r\n<style>\r\n  .flippable {\r\n    perspective: 600;\r\n    @apply py-12 absolute h-full w-full top-0 left-0;\r\n  }\r\n\r\n  .side {\r\n    @apply absolute flex items-center justify-center overflow-hidden h-full w-full top-0 left-0;\r\n  }\r\n\r\n  .action-text {\r\n    @apply text-sm text-white font-semibold mt-1.5;\r\n  }\r\n</style>\r\n","<script>\r\n  export let error = \"This page does not exist.\";\r\n</script>\r\n\r\n<div class=\"text-center mt-12 bg-white w-full rounded-md py-8\">\r\n  <p class=\"text-sm font-semibold text-red-600 uppercase tracking-wide\">\r\n    Error\r\n  </p>\r\n  <h1\r\n    class=\"mt-2 text-4xl font-extrabold text-gray-900 tracking-tight sm:text-5xl\"\r\n  >\r\n    {error}\r\n  </h1>\r\n</div>\r\n","import { getContext } from \"svelte\";\r\n\r\n// A context is a run-time construct that allows us to associate an arbitrary context object with a key.\r\n// The context is then available to children of the component with getContext.\r\n// getContext retrieves the context that belongs to the clost parent componet with the specific key. This is\r\n// the primary difference from \"just\" using a shared object through javascript modules.\r\n\r\n// The context object allows to use a shared notification store across all our components.\r\n\r\nconst context = {\r\n  subscribe: null,\r\n  addNotification: null,\r\n  removeNotification: null,\r\n  clearNotifications: null,\r\n};\r\n\r\nexport const getNotificationsContext = () => getContext(context);\r\n\r\nexport default context;\r\n","export default {\r\n  INCREMENT: +1,\r\n  DECREMENT: -1,\r\n};\r\n","class Bucket {\r\n  constructor(items, level, weight) {\r\n    this.items = items;\r\n    this.level = level;\r\n    this.weight = weight;\r\n  }\r\n\r\n  pick() {\r\n    // Pick the LRU item\r\n    const item = [...this.items].sort((a, b) => b.seen - a.seen)[\r\n      this.items.length - 1\r\n    ];\r\n\r\n    return {\r\n      ...item,\r\n      level: this.level,\r\n      seen: (item.seen += 1),\r\n    };\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.items.length === 0;\r\n  }\r\n\r\n  remove(item) {\r\n    this.items = this.items.filter((i) => i.id !== item.id);\r\n  }\r\n\r\n  add(item) {\r\n    this.items.push(item);\r\n  }\r\n}\r\n\r\nexport class Engine {\r\n  constructor(deck) {\r\n    if (!deck) {\r\n      throw new Error(\"Deck is required\");\r\n    }\r\n\r\n    let uid = 1;\r\n\r\n    const allQuestions = deck.map((item) => {\r\n      return {\r\n        ...item,\r\n        seen: 0,\r\n        id: uid++,\r\n      };\r\n    });\r\n\r\n    this.buckets = [\r\n      // All items go into the first bucket initially\r\n      // Use zero-index for ease of use\r\n      new Bucket(allQuestions, 0, 1000),\r\n      new Bucket([], 1, 500),\r\n      new Bucket([], 2, 250),\r\n      new Bucket([], 3, 125),\r\n      new Bucket([], 4, 62.5),\r\n    ];\r\n\r\n    this.streak = 0;\r\n  }\r\n\r\n  next() {\r\n    const bucket = this.selectBucket();\r\n    return bucket.pick();\r\n  }\r\n\r\n  move(item, increment, onStreakHandler) {\r\n    const bucket = this.buckets.find((bucket) => bucket.level === item.level);\r\n\r\n    // if increment is positive the answer was marked as correct. Increase streak by one otherwise reset to zero\r\n    this.streak = increment > 0 ? this.streak + 1 : 0;\r\n\r\n    // if the user is on a streak that is divisible of 5 i.e 5/10/15 trigger a streak\r\n    if (this.streak % 5 === 0 && this.streak > 0) {\r\n      onStreakHandler(this.streak);\r\n    }\r\n\r\n    // If the item is already at the highest level, don't move it\r\n    if (item.level === this.buckets.length - 1 && increment > 0) {\r\n      return;\r\n    }\r\n\r\n    // If the item is already at the the lowest level, don't move it\r\n    if (item.level === 0 && increment < 0) {\r\n      return;\r\n    }\r\n\r\n    bucket.remove(item);\r\n\r\n    const newBucket = this.buckets[item.level + increment];\r\n\r\n    newBucket.add(item);\r\n  }\r\n\r\n  selectBucket() {\r\n    // Select a bucket by using a weighted random\r\n    // A straightforward algo for picking an item at random:\r\n    // 1. Calculate sum of all the weights\r\n    // 2. Pick a random number that is 0 or greater and is less than the sum of the weights\r\n    // 3. Iterate through the buckets one at a time, subtracting their weight from your random number until you get the bucket where the random number is less than the bucket's weight\r\n\r\n    const nonEmptyBuckets = [...this.buckets].filter(\r\n      (bucket) => !bucket.isEmpty()\r\n    );\r\n\r\n    const sumOfWeights = [...nonEmptyBuckets].reduce((acc, bucket) => {\r\n      return (acc += bucket.weight);\r\n    }, 0);\r\n\r\n    // Pick a random number between 1 and sum of weights\r\n    let rnd1 = Math.random() * sumOfWeights;\r\n\r\n    let rnd = rnd1 + 1;\r\n\r\n    for (const bucket of nonEmptyBuckets) {\r\n      const isLessThan = rnd <= bucket.weight;\r\n      // isLessThan < 1 is an edge case where the random number is just above the bucket's weight\r\n      if (isLessThan || isLessThan < 1) {\r\n        return bucket;\r\n      }\r\n\r\n      rnd -= bucket.weight;\r\n    }\r\n\r\n    console.error(\"No bucket found. Should never reach here\", rnd);\r\n  }\r\n}\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import deckApi from \"./api/decks\";\r\n\r\n  import FlashCard from \"./FlashCard.svelte\";\r\n  import Loader from \"./Loader.svelte\";\r\n  import Error from \"./Error.svelte\";\r\n\r\n  import { getNotificationsContext } from \"./notifications/context\";\r\n\r\n  import MOVES from \"./flashcardEngine/moves\";\r\n\r\n  import { Engine as FlashCardEngine } from \"./flashcardEngine/engine\";\r\n\r\n  import { useFocus } from \"svelte-navigator\";\r\n\r\n  const registerFocus = useFocus();\r\n\r\n  export let slug;\r\n\r\n  let isLoading = true;\r\n\r\n  let hasError = false;\r\n\r\n  let questionProvider = null;\r\n\r\n  onMount(async () => {\r\n    try {\r\n      deck = await deckApi.getBySlug(slug);\r\n\r\n      var allDecks = await deckApi.getDecks();\r\n      var currentDeck = allDecks.find((x) => x.slug === slug);\r\n\r\n      color = currentDeck.theme;\r\n      name = currentDeck.name;\r\n\r\n      questionProvider = new FlashCardEngine(deck);\r\n      currentCard = questionProvider.next();\r\n    } catch (error) {\r\n      hasError = true;\r\n      console.error(error);\r\n    } finally {\r\n      isLoading = false;\r\n    }\r\n  });\r\n\r\n  const { addNotification } = getNotificationsContext();\r\n\r\n  function onStreak(streakCount) {\r\n    addNotification({\r\n      msg: \"You are on a streak!\",\r\n      subtitle: `Your current streak is ${streakCount}`,\r\n    });\r\n  }\r\n\r\n  export function onSuccess() {\r\n    questionProvider.move(currentCard, MOVES.INCREMENT, onStreak);\r\n    currentCard = questionProvider.next();\r\n  }\r\n\r\n  export function onFailure() {\r\n    questionProvider.move(currentCard, MOVES.DECREMENT, onStreak);\r\n    currentCard = questionProvider.next();\r\n  }\r\n\r\n  let currentCard = null;\r\n\r\n  let deck = [];\r\n  let color = \"\";\r\n  let name = \"\";\r\n</script>\r\n\r\n<div class=\"max-w-3xl mx-auto w-full mt-8\">\r\n  <div class=\"flex justify-center items-center h-full mt-16\">\r\n    {#if isLoading}\r\n      <Loader />\r\n    {:else if hasError}\r\n      <Error error=\"This deck does not exist\" />\r\n    {:else}\r\n      <FlashCard\r\n        {name}\r\n        {registerFocus}\r\n        {color}\r\n        card={currentCard}\r\n        on:success={onSuccess}\r\n        on:failure={onFailure}\r\n      />\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<svelte:head>\r\n  <title>{slug}</title>\r\n</svelte:head>\r\n","<script>\r\n  export let query;\r\n</script>\r\n\r\n<div class=\"mb-4\">\r\n  <label class=\"text-gray-700  dark:text-gray-200 font-semibold\" for=\"search\"\r\n    >Search all decks</label\r\n  >\r\n  <input\r\n    id=\"search\"\r\n    placeholder=\"Svelte\"\r\n    autocomplete=\"off\"\r\n    class=\"py-2 px-4 w-full rounded-md dark:bg-black dark:text-gray-100\"\r\n    type=\"search\"\r\n    bind:value={query}\r\n  />\r\n</div>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: moon -->\r\n\r\n<svg\r\n  class={classNames}\r\n  fill=\"none\"\r\n  stroke=\"currentColor\"\r\n  viewBox=\"0 0 24 24\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path\r\n    stroke-linecap=\"round\"\r\n    stroke-linejoin=\"round\"\r\n    stroke-width=\"2\"\r\n    d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\r\n  /></svg\r\n>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: moon:solid -->\r\n<svg\r\n  class={classNames}\r\n  fill=\"currentColor\"\r\n  viewBox=\"0 0 20 20\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path\r\n    d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\"\r\n  /></svg\r\n>\r\n","<script>\r\n  import BaseButtonRounded from \"./base/BaseButtonRounded.svelte\";\r\n  import IconMoon from \"./icons/IconMoon.svelte\";\r\n  import IconMoonSolid from \"./icons/IconMoonSolid.svelte\";\r\n\r\n  export let isDarkMode = false;\r\n</script>\r\n\r\n<BaseButtonRounded\r\n  theme={isDarkMode ? \"darkPurple\" : \"purple\"}\r\n  size=\"m\"\r\n  on:click\r\n  tooltip={isDarkMode ? \"Enable Light Mode\" : \"Enable Dark Mode\"}\r\n>\r\n  <span slot=\"icon\">\r\n    {#if isDarkMode}\r\n      <IconMoonSolid class=\"h-8 w-8 text-white\" />\r\n    {:else}\r\n      <IconMoon class=\"h-8 w-8 text-purple-700\" />\r\n    {/if}\r\n  </span>\r\n</BaseButtonRounded>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: fire -->\r\n\r\n<svg\r\n  class={classNames}\r\n  fill=\"currentColor\"\r\n  viewBox=\"0 0 20 20\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path\r\n    fill-rule=\"evenodd\"\r\n    d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\"\r\n    clip-rule=\"evenodd\"\r\n  /></svg\r\n>\r\n","<script>\r\n  let classNames;\r\n\r\n  // creates a `class` property, even\r\n  // though it is a reserved word\r\n  export { classNames as class };\r\n</script>\r\n\r\n<!-- HeroIcon: x -->\r\n\r\n<svg\r\n  class={classNames}\r\n  fill=\"currentColor\"\r\n  viewBox=\"0 0 20 20\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  ><path\r\n    fill-rule=\"evenodd\"\r\n    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n    clip-rule=\"evenodd\"\r\n  /></svg\r\n>\r\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  import IconFire from \"../icons/IconFire.svelte\";\r\n  import IconX from \"../icons/IconX.svelte\";\r\n\r\n  import { onDestroy } from \"svelte\";\r\n\r\n  export let notification;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // deconstruct the passed notification object\r\n  const { id, removeAfter } = notification;\r\n\r\n  const removeNotificationHandler = () => {\r\n    // dispatch an event so this component can be \"dumb\" and not having to know about the notification context/store\r\n    dispatch(\"removeNotification\", id);\r\n  };\r\n\r\n  let timeout = null;\r\n\r\n  if (removeAfter) {\r\n    timeout = setTimeout(removeNotificationHandler, removeAfter);\r\n  }\r\n\r\n  export function onExplicitRemove() {\r\n    removeNotificationHandler();\r\n\r\n    // also clear the current timer\r\n    if (removeAfter && timeout) clearTimeout(timeout);\r\n  }\r\n\r\n  onDestroy(() => {\r\n    // clear timeout to prevent memory leak just in case\r\n    if (removeAfter && timeout) clearTimeout(timeout);\r\n  });\r\n</script>\r\n\r\n<div\r\n  class=\"max-w-md w-full bg-white dark:bg-gray-700 shadow-lg rounded-lg pointer-events-auto flex ring-1 ring-black ring-opacity-5\"\r\n>\r\n  <div class=\"w-0 flex-1 p-2\">\r\n    <div class=\"flex items-start\">\r\n      <div class=\"flex-shrink-0 pt-0.5\">\r\n        <IconFire class=\"h-8 w-8 text-red-500\" />\r\n      </div>\r\n      <div class=\"ml-3 w-0 flex-1\">\r\n        <p class=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n          {notification.msg}\r\n        </p>\r\n        <p class=\"mt-1 text-sm text-gray-500 dark:text-gray-200\">\r\n          {notification.subtitle}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex border-l border-gray-200\">\r\n    <button\r\n      on:click={onExplicitRemove}\r\n      class=\"w-full border border-transparent rounded-none rounded-r-lg p-4 flex items-center justify-center text-sm font-medium text-indigo-600\"\r\n    >\r\n      <IconX class=\"h-4 w-4 text-gray-700 dark:text-white\" />\r\n    </button>\r\n  </div>\r\n</div>\r\n","// Inspired by https://github.com/keenethics/svelte-notifications\r\n\r\nimport { writable } from \"svelte/store\";\r\n\r\nconst addNotification = (notification, update) => {\r\n  const {\r\n    id = new Date().getTime(),\r\n    removeAfter = 3000, // ms\r\n    ...rest\r\n  } = notification;\r\n\r\n  update((notifications) => {\r\n    return [\r\n      ...notifications,\r\n      {\r\n        id,\r\n        removeAfter,\r\n        ...rest,\r\n      },\r\n    ];\r\n  });\r\n};\r\n\r\nconst removeNotification = (notificationId, update) =>\r\n  update((notifications) => {\r\n    return notifications.filter((n) => n.id !== notificationId);\r\n  });\r\n\r\nconst clearNotifications = (set) => set([]);\r\n\r\nconst createNotificationsStore = () => {\r\n  const { subscribe, set, update } = writable([]);\r\n\r\n  // expose these methods on a store instance. Notice the closures.\r\n\r\n  return {\r\n    subscribe,\r\n    addNotification: (notification) => addNotification(notification, update),\r\n    removeNotification: (notificationId) =>\r\n      removeNotification(notificationId, update),\r\n    clearNotifications: () => clearNotifications(set),\r\n  };\r\n};\r\n\r\n// export an instance of this store\r\nexport default createNotificationsStore();\r\n","<script>\r\n  import Notification from \"./Notification.svelte\";\r\n\r\n  import { setContext } from \"svelte\";\r\n\r\n  import context from \"./context\";\r\n\r\n  import store from \"./store\";\r\n\r\n  setContext(context, store);\r\n\r\n  export function onRemoveNotification(evt) {\r\n    // custom data is available on the detail property on a custom event object\r\n    // in this case, the data is the notification id\r\n    store.removeNotification(evt.detail);\r\n  }\r\n</script>\r\n\r\n<div\r\n  class=\"absolute top-2 right-2  w-full pointer-events-none flex flex-col justify-end items-end space-y-2\"\r\n>\r\n  <!-- Using a $ in front of a store is a shorthand for subscription to that store\r\n       so it accesses the reactive value directly\r\n  -->\r\n  {#each $store as notification (notification.id)}\r\n    <Notification {notification} on:removeNotification={onRemoveNotification} />\r\n  {/each}\r\n</div>\r\n\r\n<slot />\r\n","export const setThemeOnLoad = () => {\r\n  // On page load or when changing themes, best to add inline in `head` to avoid FOUC\r\n  if (\r\n    localStorage.theme === \"dark\" ||\r\n    (!(\"theme\" in localStorage) &&\r\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\r\n  ) {\r\n    document.documentElement.classList.add(\"dark\");\r\n  } else {\r\n    document.documentElement.classList.remove(\"dark\");\r\n  }\r\n\r\n  return isDarkMode();\r\n};\r\n\r\nexport const toggle = () => {\r\n  if (localStorage.theme === \"dark\") {\r\n    localStorage.theme = \"light\";\r\n    document.documentElement.classList.remove(\"dark\");\r\n  } else {\r\n    localStorage.theme = \"dark\";\r\n    document.documentElement.classList.add(\"dark\");\r\n  }\r\n\r\n  return isDarkMode();\r\n};\r\n\r\nfunction isDarkMode() {\r\n  return localStorage.theme === \"dark\";\r\n}\r\n","<script>\n  import { onMount } from \"svelte\";\n\n  import { Router, Route, Link } from \"svelte-navigator\";\n  import DeckCardList from \"./DeckCardList.svelte\";\n  import FlashCardSession from \"./FlashCardSession.svelte\";\n  import InputSearch from \"./InputSearch.svelte\";\n  import ButtonDarkMode from \"./ButtonDarkMode.svelte\";\n  import NotificationList from \"./notifications/NotificationList.svelte\";\n\n  import { toggle, setThemeOnLoad } from \"./misc/darkmode\";\n\n  onMount(() => {\n    isDarkMode = setThemeOnLoad();\n  });\n\n  function toggleDarkMode() {\n    isDarkMode = toggle();\n  }\n\n  let isDarkMode = false;\n\n  import { query } from \"./stores/query\";\n</script>\n\n<NotificationList>\n  <Router>\n    <header class=\"max-w-3xl mx-auto flex justify-between w-full mt-8 \">\n      <nav>\n        <Link\n          class=\"py-2 px-4 focus-within:ring-gray-800 rounded-md focus-within:ring-2 focus-within:ring-offset-2\"\n          to=\"/\">Home</Link\n        >\n      </nav>\n\n      <ButtonDarkMode on:click={toggleDarkMode} {isDarkMode} />\n    </header>\n\n    <main class=\"max-w-3xl mx-auto w-full mt-8\">\n      <Route path=\"/\" primary={false}>\n        <InputSearch bind:query={$query} />\n        <DeckCardList />\n      </Route>\n\n      <Route path=\"/:slug\" let:params>\n        <FlashCardSession slug={params.slug} />\n      </Route>\n    </main>\n  </Router>\n</NotificationList>\n\n<style lang=\"postcss\" global>\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n\n  body {\n    @apply bg-gray-100 dark:bg-gray-800;\n  }\n</style>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","cssText","set","set_data","wholeText","set_input_value","input","set_style","important","setProperty","custom_event","type","detail","bubbles","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","add","stylesheet","__svelte_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","createEventDispatcher","call","setContext","context","getContext","get","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","update","pop","fragment","before_update","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","css","fulfill","loop","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","will_move","did_move","m","first","new_block","old_block","new_key","old_key","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","detaching","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","skip_bound","ready","ret","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","isUndefined","isFunction","isNumber","createCounter","isSSR","addListener","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","createKey","ctxName","LOCATION","ROUTER","ROUTE","ROUTE_PARAMS","FOCUS_ELEM","paramRegex","startsWith","string","search","substr","isSplat","segment","stripSlashes","replace","segmentize","uri","filterFalsy","segments","Boolean","addQuery","pathname","query","normalizePath","path","pathFragments","joinedSegments","labels","createLabel","labelId","createMessage","message","originId","origin","to","basepath","createIdentifier","originMsg","label","createMessageHandler","args","fail","warn","console","rankRoute","route","score","default","fullPath","reduce","acc","nextScore","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","bestMatch","defaultMatch","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","createMatch","routeSegments","routeSegment","uriSegment","splatName","decodeURIComponent","dynamicMatch","exec","match","normalizeLocation","location","state","baseSegments","pathSegments","shift","normalizeUrlFragment","frag","createLocation","searchIndex","hashIndex","hasSearchIndex","hasHashIndex","pathnameAndSearch","resolveLink","routeBase","appBase","base","toPathname","toQuery","basePathname","toSegments","concat","allSegments","extractBaseUri","routePath","routeMatch","POP","getLocation","source","encodeURI","decodeURI","history","_key","createStackFrame","canUseDOM","isEmbeddedPage","globalHistory","listeners","action","notifyListeners","listenerFns","listener","unlisten","navigate","keyedState","random","toString","substring","createHistory","initialPathname","stack","entries","pushState","title","replaceState","newIndex","createMemorySource","focusCandidate","initialNavigation","pushFocusCandidate","item","level","routerIdA","routerIdB","routerMarkers","querySelectorAll","currentId","Number","dataset","svnavRouter","isAbove","routerId","focus","elem","TABINDEX","hasAttribute","blurListener","activeElement","isEndMarker","id","svnavRouteEnd","selector","parent","querySelector","handleFocus","focusElement","current","nextElementSibling","tagName","heading","queryHeading","documentElement","createTriggerFocus","a11yConfig","announcementText","manageFocus","announceNavigation","announcements","meta","announcementMessage","createAnnouncement","createId","defaultBasepath","primary","a11y","initialBasepath","normalizedBasepath","locationContext","routerContext","isTopLevelRouter","activeRoute","hasActiveRoute","prevLocation","$location","triggerFocus","createRouteFilter","routeId","routeList","routeItem","changedHistory","normalizedLocation","registerRoute","matchingRoute","prevRoutes","nextRoutes","unregisterRoute","$routes","hasHash","shouldManageFocus","$prevLocation","$activeRoute","usePreflightCheck","componentId","ctxKey","ctxProviderId","useLocation","toReadonly","useHistory","useRouteBase","_route","useResolve","parentBase","ssrMatch","useNavigate","isDefault","rawBase","$parentBase","updatedRoute","isActive","activeParams","getProps","isPartiallyCurrent","isCurrent","ariaCurrent","dynamicProps","$$restProps","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","description","slug","icon","deck","themeClasses","red","green","purple","theme","buttonText","DeckApi","includes","getDecks","log","process","env","fetch","response","json","getBySlug","isLoading","decks","deckApi","filteredDecks","toLowerCase","$query","classNames","backgroundImage","color","action_result","tooltip","registerFocus","sizeClasses","s","white","yellow","flipVertically","u","flipHorizontally","answer","question","seen","showFront","isFlipping","card","flipTransition","error","addNotification","removeNotification","clearNotifications","Bucket","constructor","items","weight","isEmpty","remove","Engine","allQuestions","buckets","streak","selectBucket","move","increment","onStreakHandler","bucket","find","nonEmptyBuckets","sumOfWeights","rnd","isLessThan","lazyElement","_resolve","unmounted","innerUnsubscribe","useFocus","hasError","questionProvider","currentDeck","FlashCardEngine","currentCard","onStreak","streakCount","msg","subtitle","MOVES","isDarkMode","notification","removeAfter","removeNotificationHandler","timeout","setTimeout","clearTimeout","getTime","notifications","notificationId","createNotificationsStore","evt","setThemeOnLoad","localStorage","matchMedia","matches","classList","toggle","body"],"mappings":"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"}